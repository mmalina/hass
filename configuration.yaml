homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Prague
  # Customization file
  customize: !include customize.yaml

zone:
  - name: Work
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    radius: 100
    icon: mdi:office

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Show the introduction message on startup.
# introduction:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Sensors
sensor:
  - platform: time_date
    display_options:
      - time
  - platform: rest
    name: Outside Temperature
    resource: http://local-zabiny-temp:8000/
    unit_of_measurement: "Â°C"
    value_template: '{{ value_json.temp }}'
    json_attributes:
      - timestamp
  - platform: template
    sensors:
      outside_temperature_delay:
        friendly_name: Outside Temperature Delay
        value_template: "{{ ((as_timestamp(utcnow()) - state_attr('sensor.outside_temperature', 'timestamp')) / 60) | round(0) }}"
        unit_of_measurement: Minutes
      heating_action:
        value_template: >-
          {% if states.climate.heating.attributes.hvac_action == 'heating' %}
            1
          {% else %}
            0
          {% endif %}

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:

system_health:

# Discover some devices automatically
discovery:
  ignore:
    - yamaha

# Enables support for tracking state changes over time
history:

hdmi_cec:
  host: 58c14403-pi-cec
  devices:
    0: TV
    1: Pi
    2: Apple TV

light:
  - platform: group
    name: Bar
    entities:
      - light.bar_1
      - light.bar_2
  - platform: switch
    name: Christmas Lights
    entity_id: switch.smart_plug

climate:
  - platform: generic_thermostat
    name: Heating
    heater: switch.boiler
    target_sensor: sensor.living_room_temperature
    cold_tolerance: 0.3
    hot_tolerance: 0
    min_cycle_duration:
      minutes: 5
    away_temp: 16
    precision: 0.1

homekit:
  filter:
    include_entities:
      - light.hall
      - sensor.outside_temperature
      - sensor.living_room_temperature
      - climate.heating
      - light.christmas_lights
      - light.tv_wall
      - light.staircase
      - sensor.attic_temperature
      - sensor.bedroom_temperature
      - light.kitchen_unit
      - light.bedroom_nightstand
      - light.hue_go
      - switch.home
      - cover.blind1
      - cover.blind2
      - cover.blind3

device_tracker:
  # - platform: unifi_direct
  #   host: 192.168.1.39
  #   username: !secret unifi_username
  #   password: !secret unifi_password
  #   new_device_defaults:
  #     track_new_devices: false
  - platform: mqtt
    devices:
      martin_mqtt: "location/martin"
    qos: 1
    payload_home: "home"
    payload_not_home: "not home"
    source_type: bluetooth

lovelace:
  # mode: yaml
  # resources:
  #   # from https://github.com/thomasloven/lovelace-slider-entity-row
  #   - type: module
  #     url: /local/slider-entity-row.js?v=2
  #   # from https://github.com/kalkih/mini-graph-card
  #   - type: module
  #     url: /local/mini-graph-card-bundle.js?v=0.9.4
  #   # from https://github.com/nervetattoo/simple-thermostat
  #   - type: module
  #     url: /local/simple-thermostat.js?v=0.36.0

# Activate the configuration editor
config:

weather:
  - platform: darksky
    mode: daily
    api_key: !secret darksky_api_key

notify:
  - name: email
    # sender: no-reply@homeassistant.local
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: anyberry@gmail.com
    encryption: starttls
    username: anyberry@gmail.com
    password: !secret gmail_password
    recipient: anyberry@gmail.com
    sender_name: My Home Assistant

rest_command:
  yamaha_recall_preset:
    url: "http://yamaha.local/YamahaExtendedControl/v1/netusb/recallPreset?zone=main&num={{num}}"
  yamaha_set_speaker:
    url: "http://yamaha.local/YamahaExtendedControl/v1/system/setSpeaker{{speaker}}?enable={{enable}}"

cover:
  - platform: template
    covers:
      all_blinds:
        device_class: shutter
        open_cover:
          service: mqtt.publish
          data:
            topic: cmnd/blinds/shutteropen
        close_cover:
          service: mqtt.publish
          data:
            topic: cmnd/blinds/shutterclose
        stop_cover:
          service: mqtt.publish
          data:
            topic: cmnd/blinds/shutterstop
        position_template: "50"

# cover:
#   - platform: group
#     name: all_blinds
#     entities:
#       - cover.blind1
#       - cover.blind2
#       - cover.blind3

switch:
  - platform: template
    switches:
      home:
        friendly_name: Home
        turn_on:
          service: mqtt.publish
          data:
            topic: location/martin
            payload: "home"
            qos: 1
            retain: 1
        turn_off:
          service: mqtt.publish
          data:
            topic: location/martin
            payload: "not home"
            qos: 1
            retain: 1
      heating_on:
        friendly_name: Heating on/off status
        value_template: "{{ not is_state('climate.heating', 'off') }}"
        turn_on:
          service: climate.turn_on
          entity_id: climate.heating
        turn_off:
          service: climate.turn_off
          entity_id: climate.heating

tts:
  - platform: google_translate
    service_name: google_say
